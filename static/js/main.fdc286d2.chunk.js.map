{"version":3,"sources":["components/Snake.js","components/Victim.js","components/Result.js","App.js","index.js"],"names":["props","snakeDots","map","dot","i","style","left","top","className","key","Result","display","this","showResult","score","type","onClick","newGame","Component","getRandomCoordinates","Math","floor","random","keyCodes","initialState","intervalId","food","speed","started","direction","App","stop","clearInterval","state","setState","onStart","onKeyDown","e","window","event","keyCode","push","moveSnake","dots","head","length","shift","interval","setInterval","document","onkeydown","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","reverse","pop","forEach","newState","enlargeSnake","increaseSpeed","newSnake","unshift","Snake","Victim","backgroundColor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fdc286d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            {props.snakeDots.map((dot ,i) => {\r\n                const style = {\r\n                    left: `${dot[0]}%`,\r\n                    top: `${dot[1]}%`\r\n                }\r\n                return (\r\n                    <div className= 'snake-dot' key={i} style={ style } />\r\n                )  \r\n            }\r\n            \r\n        )}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default (props) =>{\r\n    const style = {\r\n        left: `${props.dot[0]}%`,\r\n        top: `${props.dot[1]}%`\r\n    }\r\n    return(\r\n        <div className = \"snake-victim\" style = {style}/>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Result extends Component {\r\n    render() {\r\n        const style = {display: this.props.showResult ?  \"block\" : \"none\"}\r\n        return (\r\n            <div>\r\n                <div  >\r\n                    <span className = \"game-result\" style = {style} >\r\n                        <h1>Game Over</h1>\r\n                        <h2>Result <strong>{this.props.score}</strong></h2>\r\n                        <button type='button' onClick={() => this.props.newGame()}> New Game</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Snake from './components/Snake';\nimport Victim from './components/Victim';\nimport Result from \"./components/Result\"\n\nconst getRandomCoordinates = () =>{\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min)/2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min)/2) * 2;\n  return [x , y]\n}\nconst keyCodes = []\nconst initialState = {\n  intervalId:null,\n  food: getRandomCoordinates(),\n  speed: 200,\n  started: false,  \n  showResult:false,\n  score:0,\n  direction: \"RIGHT\",\n  snakeDots: [[0, 0], [2, 0]]\n};\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.keyCodes = keyCodes;\n    \n  }\n  speed () {\n      clearInterval(this.interval);\n      this.interval = setInterval(this.moveSnake ,this.state.speed);\n        this.setState({intervalId :this.interval})   \n   }\n  \n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n    \n  }\n\n  componentDidUpdate() { \n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    \n  } \n\n  stop = () => {\n    clearInterval(this.state.intervalId)\n    this.setState({\n      started:!this.state.started\n    })\n  }  \n\n  onStart = () => {\n    if (!this.state.started) {\n      this.speed();\n      return this.setState({\n        started:!this.state.started\n      })\n    }else{\n      this.stop();\n    } \n  }\n  onKeyDown = e => {\n    e = e || window.event;  \n    switch (e.keyCode) {\n      case 38:\n        this.keyCodes.push(e.keyCode)\n        this.setState({ direction: \"UP\" });\n        break;\n      case 40:\n          this.keyCodes.push(e.keyCode)\n        this.setState({ direction: \"DOWN\" });\n        break;\n      case 37:\n          this.keyCodes.push(e.keyCode)\n        this.setState({ direction: \"LEFT\" });\n        break;\n      case 39:\n        this.keyCodes.push(e.keyCode)\n        this.setState({ direction: \"RIGHT\" });\n        break;\n      default:\n        break;\n    }\n  };\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];   \n    switch (this.state.direction) {\n      case \"RIGHT\":\n        head = [head[0] + 2, head[1]];\n        break;\n      case \"LEFT\":\n        head = [head[0] - 2, head[1]];\n        break;\n      case \"DOWN\":\n        head = [head[0], head[1] + 2];\n        break;\n      case \"UP\":\n        head = [head[0], head[1] - 2];\n        break;\n      default:\n        break;\n    }\n    dots.shift();\n    dots.push(head);\n    this.setState({\n      snakeDots: dots\n    });  \n  };\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let length = snake.length;\n    let head = snake[length - 1];\n    let direction = this.state.direction;\n    if (direction === \"DOWN\") {\n      if (this.keyCodes[this.keyCodes.length-2] === 38) {\n        return snake.reverse();\n      }\n    }\n    if (direction === \"UP\") {\n      if (this.keyCodes[this.keyCodes.length-2] === 40) {\n        return snake.reverse();\n      }\n    }\n    if (direction === \"RIGHT\") {\n      if (this.keyCodes[this.keyCodes.length-2] === 37) {\n        return snake.reverse();\n      }\n    }\n    if (direction === \"LEFT\") {\n      if (this.keyCodes[this.keyCodes.length-2] === 39) {\n        return snake.reverse();       \n      }\n    }\n    snake.pop();  \n      snake.forEach(dot => {\n        if (head[0] === dot[0] && head[1] === dot[1]) {\n          this.onGameOver();\n        }\n      });   \n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      let newState = {...this.state };\n      newState.score =  this.state.score + 10;\n      newState.started = this.state.started;\n      newState.food = getRandomCoordinates();\n      newState.snakeDots = this.enlargeSnake();\n      newState.speed = this.increaseSpeed();\n      this.setState(newState);\n      this.speed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    return newSnake;\n  }\n\n  increaseSpeed() {\n    return (this.state.speed > 50) ? this.state.speed -10: this.state.speed;\n  }\n\n  newGame = () =>{\n    this.setState({\n      showResult:!this.state.showResult,\n      score:0\n    });\n    this.keyCodes=[];\n  }\n\n  onGameOver() {\n    this.setState({...initialState ,showResult:true,score:this.state.score});\n    this.stop();    \n  }\n\n  render(){\n\n     return (\n        <div>\n          <Result showResult = {this.state.showResult} score = {this.state.score} newGame={this.newGame}/>\n          <div className = 'app'style={{display:!this.state.showResult? \"flex\" : \"none\"}}>\n          <div className = \"score\">Score {this.state.score === 0 ? \"\":this.state.score}</div>\n          <div className=\"game-area\" >\n            <Snake snakeDots = {this.state.snakeDots}/>\n            <Victim dot = {this.state.food}/>\n          </div>\n          <button className = \"start\" onClick = {this.onStart} style= {{backgroundColor:!this.state.started ? \"red\" : \"blue\"}}>\n            {!this.state.started ? \"Start\" : \"Stop\"}\n          </button>\n          </div>\n        </div>  \n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}